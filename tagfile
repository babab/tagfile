#!/usr/bin/env python

import hashlib
import logging
import os
import sys

import yaml

defaultconfig = '''
db-file:        example.db
log-file:       example.log
load-bar:       yes
hash-algo:      sha1
hash-buf-size:  1024
'''

config = yaml.load(defaultconfig)


if os.path.exists('config.yaml'):
    config.update(yaml.load(open('config.yaml').read()))
logging.basicConfig(
    filename=config['log-file'], level=logging.DEBUG, style='{',
    format='{asctime}:{levelname}: {message}'
)


class Files:
    @staticmethod
    def walkdir(directory):
        paths = []
        for root, directories, files in os.walk(os.path.expanduser(directory)):
            for filename in files:
                filepath = os.path.join(root, filename)
                paths.append(filepath)
        return paths

    @staticmethod
    def hashfile(filepath):
        if config['hash-algo'] == 'md5':
            h = hashlib.md5()
        elif config['hash-algo'] == 'sha1':
            h = hashlib.sha1()
        else:
            raise Exception('Invalid HASH_ALGO in configuration')

        with open(filepath, 'rb') as f:
            while True:
                data = f.read(config['hash-buf-size'])
                if not data:
                    break
                h.update(data)
        return h.hexdigest()

if __name__ == '__main__':
    paths = Files.walkdir('~/Desktop')

    i = 0
    total = len(paths)
    for path in paths:
        i += 1
        if config['load-bar']:
            sys.stdout.write('\r {} / {}'.format(i, total))
        # db.insert([Files.hashfile(path), path, 'new'])
    print('')
